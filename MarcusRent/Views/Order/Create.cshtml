@model MarcusRent.Models.OrderViewModel

@if (TempData["TempData"] != null)
{
    <div class="alert alert-danger">
        @TempData["TempData"]
    </div>
}

@{
    // Säkerställ invariant culture för decimal i JavaScript
    var pricePerDayJs = Model.Price == 0m
        ? (ViewBag.PricePerDay ?? 0m)
        : Model.Price; // Om Model.Price redan satt, annars ViewBag

    string pricePerDayStr = pricePerDayJs.ToString(System.Globalization.CultureInfo.InvariantCulture);
}

<h2>Boka bil</h2>


<p>Bokar bil: @ViewBag.CarInfo</p>
<p>@ViewBag.PricePerDay kr/dag</p>

<p>Pris per dag (JS): <strong>@pricePerDayStr</strong></p>

<p>Beskrivning: @Model.CarDescription</p>

@if (ViewBag.ImageUrls != null && ((List<string>)ViewBag.ImageUrls).Any())
{
    var imageUrls = (List<string>)ViewBag.ImageUrls;
    <div class="image-gallery position-relative mb-4">
        <img src="@imageUrls[0]" alt="Car Image" class="img-fluid rounded shadow gallery-image" style="max-height:200px; object-fit:cover;" />
        <button type="button" class="prev-btn">&#10094;</button>
        <button type="button" class="next-btn">&#10095;</button>
        <input type="hidden" class="image-urls" value="@string.Join(";", imageUrls)" />
    </div>
}




<form asp-action="Create" method="post">
    <input type="hidden" asp-for="CarId" />
    <input type="hidden" asp-for="Brand" />
    <input type="hidden" asp-for="Model" />

    <div class="form-group">
        <label asp-for="StartDate"></label>
        <input asp-for="StartDate" class="form-control" type="date" id="startDate" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EndDate"></label>
        <input asp-for="EndDate" class="form-control" type="date" id="endDate" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label>Pris</label>
        <input type="text" id="price" class="form-control" readonly />
    </div>



    <button type="submit" class="btn custom-btn">Boka</button>
</form>

@section Scripts {
    <script>
        const startDateInput = document.getElementById('startDate');
        const endDateInput = document.getElementById('endDate');
        const priceInput = document.getElementById('price');
        const pricePerDay = parseFloat('@pricePerDayStr');

        function calculatePrice() {
            const startDate = new Date(startDateInput.value);
            const endDate = new Date(endDateInput.value);

            if (startDateInput.value && endDateInput.value && endDate > startDate) {
                const diffTime = endDate - startDate;
                const diffDays = diffTime / (1000 * 60 * 60 * 24);
                const totalPrice = diffDays * pricePerDay;
                priceInput.value = totalPrice.toFixed(2) + " kr";
            } else {
                priceInput.value = "";
            }
        }

        startDateInput.addEventListener('change', calculatePrice);
        endDateInput.addEventListener('change', calculatePrice);

        // Beräkna pris direkt när sidan laddas (om datum redan ifyllda)
        calculatePrice();
    </script>
}
